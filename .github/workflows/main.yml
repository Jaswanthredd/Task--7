name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker image to Amazon ECR
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Create ECR repository
      - name: Create ECR Repository
        run: |
          REPO_NAME=${{ secrets.ECR_REPOSITORY }}  # The repository name from secrets
          aws ecr create-repository --repository-name $REPO_NAME --region ${{ secrets.AWS_REGION }} || echo "Repository already exists"

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      # Step 5: Build Docker image
      - name: Build Docker image
        run: |
          cd my-medusa-app  # Change directory to 'my-medusa-app'
          docker build -t ${{ secrets.ECR_REPOSITORY }} .

      # Step 6: Tag Docker image
      - name: Tag Docker image
        run: |
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      # Step 7: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest

      # Step 8: Cleanup local images
      - name: Cleanup local images
        run: |
          docker rmi ${{ secrets.ECR_REPOSITORY }}:latest
          docker rmi ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
